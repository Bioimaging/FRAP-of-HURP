%   This script is extracting all the intensity values inside each *.mat
%   generated by the bleaching control experiments. These *.mat files have
%   to be in the same folder. 
%
%   A running average filter along the distance is applied for each time
%   point of each experiments. Then the positions of the maximum intensity
%   of each half-spindle is extracted: Max_LR_idx
%
%   The bleaching efficiency is defined as the value of the maxima of the
%   each half-spingle along the time divided by the intensity of the first
%   time point.
%
%   Linear, single and double exponential models are shown to fit the
%   bleaching. Currently double exponential decay is the one which is used
%   and saved.
%
%   Nicolas Liaudet
%   Bioimaging Core Facility - UNIGE
%   https://www.unige.ch/medecine/bioimaging/en/bioimaging-core-facility/
% 
%   v1.0 05-Jul-2018 NL

clc
clear
close all


%**************************************************************************
%Loading the data and assemble them
%**************************************************************************
path   =  uigetdir;
fnames = dir([path filesep '*.mat']);
fnames = {fnames.name};

mch1 = cell(1,length(fnames));
d    = cell(1,length(fnames));
t    = cell(1,length(fnames));
for idxF = 1:length(fnames)
    load([path filesep fnames{idxF}])
    mch1(idxF) = {cat(1,DATA.rel_mch1{:})};
    d(idxF) = {DATA.rel_d{1}};
    t(idxF) = {DATA.t};
end
dl = cellfun(@(x) length(x), d);
d = cat(1,d{:});
d = unique(d(:));
if length(d)~=dl
    errordlg('The distance data are inconsistent within all the files...',...
        'Distance problem')
end
MaxTframe = max(cellfun(@(x) size(x,1), mch1));
T = unique(cat(2,t{:}));
MCH1 = nan(MaxTframe,length(d),length(fnames));
for idxF = 1:length(fnames)
    idxT = ismember(t{idxF},T);
    MCH1(idxT,:,idxF) = mch1{idxF}(idxT,:);
end
mch1 = MCH1;

%**************************************************************************
%Running average of 3 frames along the distance, for each time point
%get the maximum on the left and the one the right (ch1) Max_LR_idx
%**************************************************************************
Max_LR_idx = zeros(size(mch1,3),2);
for idxF = 1:size(mch1,3)
    for idxT = 1:size(mch1,1)
        tmp1 = mch1(idxT,:,idxF);
        tmp1(isnan(tmp1)) = 0;
        
        windowSize = 3;
        b = (1/windowSize)*ones(1,windowSize);
        a = 1;
        tmp1 = filter(b,a,tmp1);
        
        mch1(idxT,:,idxF) = tmp1;
        
        if idxT == 1
            Sz = length(tmp1);
            SzH = round(Sz/2);
            [~,Max_LR_idx(idxF,1)] = max(tmp1(1:SzH));
            [~,Max_LR_idx(idxF,2)] = max(tmp1(SzH+1:end));
            Max_LR_idx(idxF,2) = Max_LR_idx(idxF,2)+SzH;
        end
    end
end

%**************************************************************************
%Construct the Bleaching efficiency
%**************************************************************************
Bleach_eff_C_LR = zeros(size(mch1,1),2,size(mch1,3));
for idxC=1:size(mch1,3)
    tmp = mch1(:,:,idxC);
    Bleach_eff_C_LR(:,1,idxC) = 100*tmp(:,Max_LR_idx(idxC,1))/...
                                        tmp(1,Max_LR_idx(idxC,1));
    Bleach_eff_C_LR(:,2,idxC) = 100*tmp(:,Max_LR_idx(idxC,2))/...
                                        tmp(1,Max_LR_idx(idxC,2));    
end
Bleach_eff_C = squeeze(mean(Bleach_eff_C_LR,2));
Bleach_eff = mean(Bleach_eff_C,2);


%**************************************************************************
%make the figure
%**************************************************************************
fig = figure('PaperPosition',[0.5 0.5 49.5 20.5],'Color',[1 1 1],...
            'PaperSize',[50 21],'units','normalized',...
        'outerposition',[0 0 1 1],'Name','Bleaching model');
subplot(2,2,1)
hold on
for idxT=1:size(mch1,1)
    tmp  = mch1(idxT,:,:);
    plot([1:size(mch1,2)*size(mch1,3)] ,...
        reshape(tmp,[size(mch1,2)*size(mch1,3),1]))
end
hold off
title('Running average of Ch1 all cells concatenated @t')
xlabel('d rel. concatenated')
ylabel('Ch1')
set(gca,'Color',[0.9 0.9 0.9],'Box','on')

subplot(2,2,2)
cmap = jet(size(mch1,3));
for idxC=1:size(mch1,3)       
    line(T,Bleach_eff_C_LR(:,1,idxC),'LineStyle','-','Color',cmap(idxC,:))
    line(T,Bleach_eff_C_LR(:,2,idxC),'LineStyle','--','Color',cmap(idxC,:))
end
line(T,Bleach_eff,'LineStyle','-','Color',[0 0 0]);
title('Bleaching at max position (left max.(-) right max.(--))')
xlabel('t(s)')
ylabel('\epsilon_{Bleach}(%)')
set(gca,'Color',[0.9 0.9 0.9],'Box','on')


subplot(2,2,3)
for idxC =1:size(mch1,3)
    line(T,Bleach_eff_C(:,idxC),'LineStyle','-','Color',cmap(idxC,:),...
        'Marker','o','MarkerFaceColor',cmap(idxC,:),...
        'MarkerEdgeColor',[0.2 0.2 0.2])
end
set(gca,'Color',[0.9 0.9 0.9],'Box','on')
title('Bleaching average @ max position')
xlabel('t(s)')
ylabel('\epsilon_{Bleach}(%)')
set(gca,'Color',[0.9 0.9 0.9],'Box','on')


subplot(2,2,4)
hl(1) = line(T,Bleach_eff,'LineStyle','-','Color',[0 0 0],...
    'Marker','o','MarkerFaceColor',[1 0 0],'MarkerEdgeColor',[0.2 0.2 0.2]);

cmapF = lines(3);
[txt1,y_lin,res,sigcor,fitobject_lin] = mkfit(T,Bleach_eff','linear');
[txt2,y_se,res,sigcor,fitobject_se] = mkfit(T,Bleach_eff','single exponential');
[txt3,y_de,res,sigcor,fitobject_de] = mkfit(T,Bleach_eff','double exponential');

line(T,y_lin,'LineStyle','-','Color',cmapF(1,:))
line(T,y_se, 'LineStyle','-','Color',cmapF(2,:))
line(T,y_de, 'LineStyle','-','Color',cmapF(3,:))

y_lin = y_lin-y_lin(1);
blc_lin = Bleach_eff-y_lin;

y_se = y_se-y_se(1);
blc_se = Bleach_eff-y_se;

y_de = y_de-y_de(1);
blc_de = Bleach_eff-y_de;

hl(2) = line(T,blc_lin,'LineStyle','-','Color',cmapF(1,:),...
    'Marker','o','MarkerFaceColor',cmapF(1,:),'MarkerEdgeColor',[0.2 0.2 0.2]);
hl(3) = line(T,blc_se, 'LineStyle','-','Color',cmapF(2,:),...
    'Marker','o','MarkerFaceColor',cmapF(2,:),'MarkerEdgeColor',[0.2 0.2 0.2]);
hl(4) = line(T,blc_de, 'LineStyle','-','Color',cmapF(3,:),...
    'Marker','o','MarkerFaceColor',cmapF(3,:),'MarkerEdgeColor',[0.2 0.2 0.2]);
legend(hl,{'Data',txt1,txt2,txt3},'Location','southwest')

title('Fitting models and corrections')
xlabel('t(s)')
ylabel('\epsilon_{Bleach}(%)')
set(gca,'Color',[0.9 0.9 0.9],'Box','on')


print(fig,[path filesep 'bleach model.pdf'],'-painters','-dpdf')
savefig([path filesep 'bleach model.fig'])

fitobject = fitobject_de;
save([path filesep 'bleach_model.mat'],'fitobject')
disp('Done !!!')